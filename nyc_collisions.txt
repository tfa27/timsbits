# for dataset: https://drive.google.com/open?id=18pIEWHyLaL5BSydbSvLGeT8uEZmMWu01

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split

df = pd.read_csv('nypd-motor-vehicle-collisions.csv')

cols_to_drop = ['DATE', "ZIP CODE", "LATITUDE", "LONGITUDE", "LOCATION", "ON STREET NAME", "CROSS STREET NAME", "OFF STREET NAME", "CONTRIBUTING FACTOR VEHICLE 1", "CONTRIBUTING FACTOR VEHICLE 2", "CONTRIBUTING FACTOR VEHICLE 3", "CONTRIBUTING FACTOR VEHICLE 4", "CONTRIBUTING FACTOR VEHICLE 5", "UNIQUE KEY", "VEHICLE TYPE CODE 1", "VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3", "VEHICLE TYPE CODE 4", "VEHICLE TYPE CODE 5"]

df = df.drop(columns=cols_to_drop,axis=1)

df = df.dropna()

df['TIME'] = df.TIME.str.replace(':', '')
df['TIME'] = df['TIME'].astype(float)

df = df.sample(frac = 1, replace=True, random_state = 1)

df['TIME'] = df.TIME.str.replace(':', '')
df['TIME'] = df['TIME'].astype(float)

df = df.sample(frac = 1, replace=True, random_state = 1)

df = pd.get_dummies(df)
df = df.drop(columns = 'BOROUGH_STATEN ISLAND', axis = 1)

cm = df.corr()['NUMBER OF PERSONS KILLED']
cm

label = df['NUMBER OF PERSONS KILLED']
feat = df.drop(columns = ['NUMBER OF PERSONS KILLED'], axis = 1)

X_train, X_test, y_train, y_test = train_test_split(feat, label, random_state = 0)

from sklearn.tree import DecisionTreeClassifier 
from sklearn import metrics

clf = DecisionTreeClassifier()
clf = clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)

print(f'Accuracy: {metrics.accuracy_score(y_test, y_pred)}')


# just visualisation
from sklearn.tree import export_graphviz
from sklearn.externals.six import StringIO  
from IPython.display import Image  
import pydotplus

feature_cols = ['TIME', 'NUMBER OF PERSONS INJURED', 'NUMBER OF PEDESTRIANS INJURED', 'NUMBER OF PEDESTRIANS KILLED', 'NUMBER OF CYCLIST INJURED', 'NUMBER OF CYCLIST KILLED', 'NUMBER OF MOTORIST INJURED', 'NUMBER OF MOTORIST KILLED', 'BOROUGH_BRONX', 'BOROUGH_BROOKLYN', 'BOROUGH_MANHATTAN', 'BOROUGH_QUEENS']

dot_data = StringIO()
export_graphviz(clf, out_file=dot_data,  
                filled=True, rounded=True,
                special_characters=True,feature_names = feature_cols,class_names=['0','1', '2', '3', '4', '5', '6', '7', '8'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png('diabetes.png')
Image(graph.create_png())

